"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./lib/__bundle-5d8ae943.js"),n=require("./lib/__bundle-0bbec988.js"),t=require("./lib/__bundle-bda78dae.js"),s=require("./lib/__bundle-2a594925.js"),a=require("./lib/__bundle-197b1725.js"),i=require("./lib/__bundle-a29353f5.js");require("./lib/__bundle-f6d4722d.js");class r{constructor(e){this.id=e.id,this.name=e.name,this.isDefault=e.is_default}static payloadify(n){return e.deundefined(e.undefineNullProps({id:n.id,name:n.name,is_default:n.isDefault}))}get customType(){return this.isDefault?"*":String(this.id)}}class o extends e.InstancedObject{constructor(e,{sdkState:n,cacheContext:t,channelManager:s}){super(e),this._channels=new Map,this._sdkState=n,this._cacheContext=t,this._channelManager=s}get collection(){const{nestdb:t}=this._cacheContext;return e.unless(!!t).throw(e.SendbirdError.databaseError),t.collection(n.NESTDB_FEEDCHANNEL_COLLECTION_NAME)}get localCacheEnabled(){const{localCacheEnabled:e}=this._cacheContext;return e&&!!this.collection}_serialize(e,n=0){return Object.assign(Object.assign({},e.serialize()),{lastMessageUpdatedAt:e.lastMessage?e.lastMessage.createdAt:0,syncIndex:n})}_deserialize(e){return this._channelManager.buildFeedChannelFromSerializedData(e)}get channels(){return[...this._channels.values()]}isCachedInMemory(e){return this._channels.has(e)}get(n){return e.__awaiter(this,void 0,void 0,(function*(){if(this._channels.has(n))return this._channels.get(n);if(this.localCacheEnabled){const e=yield this.collection.getByKey(n);if(e)return this._channels.set(n,this._deserialize(e)),this._channels.get(n)}}))}fetch({token:t,limit:a=n.DEFAULT_FEED_LIMIT,backward:i=!1,order:r="latest_last_message",borderlineChannelUrl:o}){return e.__awaiter(this,void 0,void 0,(function*(){if(this.localCacheEnabled){const e={where:e=>{if(t&&"latest_last_message"===r){if(!i&&e.lastMessageUpdatedAt>t||i&&e.lastMessageUpdatedAt<t)return!1;if(o&&o===e.url)return!1}return!0},index:s.getFeedChannelIndexBy(r),backward:i},n=yield this.collection.query(e),l=(yield n.fetch({limit:a})).map((e=>this._deserialize(e)));return l.forEach((e=>{this._channels.has(e.url)||this._channels.set(e.url,e)})),l}return[]}))}upsert(n){return e.__awaiter(this,void 0,void 0,(function*(){const t=[];if(n.forEach((n=>{if(this._channels.has(n.url)){const s=this._channels.get(n.url),a=e.deundefined(n);Object.assign(s,a,{_iid:this._iid}),t.push(s)}else this._channels.set(n.url,n),t.push(n)})),this.localCacheEnabled){const e=[];for(const n in t)e.push(this._serialize(t[n],parseInt(n)));yield this.collection.upsertMany(e)}return t}))}remove(n){return e.__awaiter(this,void 0,void 0,(function*(){for(const e of n)this._channels.delete(e),this.localCacheEnabled&&(yield this.collection.remove(e))}))}clear(){return e.__awaiter(this,void 0,void 0,(function*(){this.clearMemoryCache(),this.localCacheEnabled&&(yield this.collection.clear())}))}clearMemoryCache(){this._channels.clear()}}class l{constructor({feedChannelCache:n,notificationCache:s,dispatcher:i}){this._observers=new Map,i.on((i=>e.__awaiter(this,void 0,void 0,(function*(){if(i instanceof t.FeedChannelUpdateEventCommand){const{channels:e,source:t,isWebSocketEventComing:s,data:a}=i,r=e.filter((e=>e instanceof O)),o=yield n.upsert(r);s||this._broadcastUpdateEvent(o,t,a)}else if(i instanceof t.FeedChannelRemoveEventCommand){const{channelUrls:t,source:a,isWebSocketEventComing:r}=i;yield n.remove(t),yield e.runOrNothing((()=>e.__awaiter(this,void 0,void 0,(function*(){for(const e of t)yield s.removeMessagesOfChannel(e)})))),r||this._broadcastRemoveEvent(t,a)}else i instanceof a.DatabaseOpenCommand&&(yield n.fetch({token:Number.MAX_SAFE_INTEGER,limit:Number.MAX_SAFE_INTEGER}))}))))}_broadcastUpdateEvent(e,n,t){for(const s of this._observers.values())s.onUpdate&&s.onUpdate(e,n,t)}_broadcastRemoveEvent(e,n){for(const t of this._observers.values())t.onRemove&&t.onRemove(e,n)}subscribe(e,n){this._observers.set(e,n)}unsubscribe(e){this._observers.delete(e)}unsubscribeAll(){this._observers.clear()}}const d=!1;class h extends e.APIRequestCommand{constructor(n){super();const{userId:t,token:s,limit:a,includeEmpty:i}=n;this.method=e.APIRequestMethod.GET,this.path=`${e.API_PATH_USERS}/${encodeURIComponent(t)}/my_group_channels`,this.params=e.deundefined({token:s,limit:a,show_empty:null!=i?i:d,show_read_receipt:!0,show_delivery_receipt:!0,show_member:!0,is_feed_channel:!0,order:"latest_last_message"})}}class c extends e.APIResponseCommand{constructor(e,n){super(e,n),this.channels=[];const{next:t,channels:s,ts:a}=n;this.token=t,this.ts=null!=a?a:0,this.channels=(null!=s?s:[]).map((n=>(n.ts=a,new O(e,n))))}}class u extends e.APIRequestCommand{constructor({channelUrl:n,isInternalCall:t}){super(),this.method=e.APIRequestMethod.GET,this.path=`${t?e.API_PATH_GROUP_CHANNELS_INTERNAL:e.API_PATH_GROUP_CHANNELS}/${encodeURIComponent(n)}`,this.params={show_member:!0,show_read_receipt:!0,show_delivery_receipt:!0,is_feed_channel:!0}}}class _ extends e.APIResponseCommand{constructor(e,n){super(e,n),this.channel=new O(e,n)}}const C={includeEmpty:!0},m=n=>e.isTypeOf("boolean",n.includeEmpty);class g extends e.APIRequestCommand{constructor({userId:n,ts:t,token:s,params:a}){super();const{includeEmpty:i}=Object.assign(Object.assign({},C),a);this.method=e.APIRequestMethod.GET,this.path=`${e.API_PATH_USERS}/${encodeURIComponent(n)}/my_group_channels/changelogs`,this.params=e.deundefined(e.undefineNullProps({show_delivery_receipt:!0,show_member:!0,show_read_receipt:!0,is_feed_channel:!0,show_empty:i,change_ts:t||null,token:s}))}}class p extends e.APIResponseCommand{constructor(e,n){super(e,n),this.updatedChannels=n.updated.map((n=>new O(e,n))),this.deletedChannelUrls=n.deleted,this.hasMore=n.has_more,this.token=n.next}}class f extends e.APIRequestCommand{constructor(){super(),this.method=e.APIRequestMethod.GET,this.path=`${e.API_PATH_NOTIFICATIONS}/settings`}}class v extends e.APIResponseCommand{constructor(e,n){super(e,n),this.jsonString=JSON.stringify(n)}}const E=20;class b extends e.APIRequestCommand{constructor(n){const{reverse:t=!1,keys:s,limit:a=E,token:i}=n;super(),this.method=e.APIRequestMethod.GET,this.path=`${e.API_PATH_NOTIFICATIONS}/templates`,this.params=e.deundefined({token:i,keys:s,limit:a,reverse:t,order:"updated_at",show_ui_template:!0,show_color_variables:!0})}}class y extends e.APIResponseCommand{constructor(n,t){super(n,t);const{next:s,has_more:a=!1}=t,i=e.__rest(t,["next","has_more"]);this.nextToken=s,this.hasMore=a,this.notificationTemplateList={jsonString:JSON.stringify(i)}}}const M={reverse:!1,keys:void 0,limit:20};class w extends e.APIRequestCommand{constructor(n){const{key:t}=n;super(),this.method=e.APIRequestMethod.GET,this.path=`${e.API_PATH_NOTIFICATIONS}/templates/${t}`,this.params=e.deundefined({key:t})}}class T extends e.APIResponseCommand{constructor(e,n){super(e,n),this.jsonString=JSON.stringify(n)}}class A extends e.WebSocketEventCommand{constructor(t,s,a){var i,r,o;super(t,"ADMM",a),this.message=new n.NotificationMessage(t,a);const{sdkState:l}=e.Vault.of(t);this.isMentioned=e.checkIfMentioned(this.message.mentionType,null!==(o=null!==(i=this.message.mentionedUserIds)&&void 0!==i?i:null===(r=this.message.mentionedUsers)||void 0===r?void 0:r.map((e=>e.userId)))&&void 0!==o?o:[],l.userId)}}const N={};class S extends i.BaseChannelManager{get _notificationMessageCache(){return n.NotificationCache.of(this._iid)}constructor(t,s){super(t,Object.assign(Object.assign({},s),{channelType:e.ChannelType.FEED})),this._feedChannelHandlers=new Map,this._feedChannelCache=new o(this._iid,{sdkState:this._sdkState,cacheContext:this._cacheContext,channelManager:this}),this._feedChannelBroadcast=new l({feedChannelCache:this._feedChannelCache,dispatcher:this._dispatcher,notificationCache:n.NotificationCache.of(t)}),this._dispatcher.on((n=>{n instanceof e.WebSocketEventCommand&&this._handleEvent(n)})),N[t]||(N[t]=this)}static of(n){return N[n]||(N[n]=new S(n,e.Vault.of(n))),N[n]}static clear(e){N[e]&&delete N[e]}get handlers(){return[...this._feedChannelHandlers.values()]}buildFeedChannelFromSerializedData(n){const t=e.deserialize(n);return new O(this._iid,O.payloadify(t))}addHandler(e,n){this._feedChannelHandlers.set(e,n)}removeHandler(e){this._feedChannelHandlers.delete(e)}clearHandler(){this._feedChannelHandlers.clear()}getMyFeedChannels(n,t,s){return e.__awaiter(this,void 0,void 0,(function*(){const e=new h(Object.assign(Object.assign({},t),{userId:this._sdkState.userId,token:n,limit:s})),a=yield this._requestQueue.send(e),{channels:i,token:r}=a.as(c);return{channels:i,token:r}}))}getChannel(n,t=!1){return e.__awaiter(this,void 0,void 0,(function*(){e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters);try{const e=yield this.getChannelFromCache(n);if(e)return e}catch(e){}return yield this.getChannelWithoutCache(n,t)}))}getChannelFromCache(n){var t;return e.__awaiter(this,void 0,void 0,(function*(){return e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters),null!==(t=yield this._feedChannelCache.get(n))&&void 0!==t?t:null}))}getChannelWithoutCache(n,t=!1){return e.__awaiter(this,void 0,void 0,(function*(){e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters);const s=new u({channelUrl:n,isInternalCall:t}),a=yield this._requestQueue.send(s),{channel:i}=a.as(_),[r]=yield this.upsertChannelsToCache([i]);return r}))}getMyFeedChannelChangeLogs(n,s,a=e.CollectionEventSource.REQUEST_CHANNEL_CHANGELOGS){return e.__awaiter(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},C),s);e.unless((e.isTypeOf("string",n)||e.isTypeOf("number",n))&&m(i)).throw(e.SendbirdError.invalidParameters);const r=new g(e.undefineNullProps({userId:this._sdkState.userId,ts:"number"==typeof n?n:null,token:"string"==typeof n?n:null,params:i})),o=yield this._requestQueue.send(r),{updatedChannels:l,deletedChannelUrls:d,hasMore:h,token:c}=o.as(p);return l.length>0&&this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:l,source:a})),d.length>0&&this._dispatcher.dispatch(new t.FeedChannelRemoveEventCommand({channelUrls:d,source:a})),{updatedChannels:l,deletedChannelUrls:d,hasMore:h,token:c}}))}getTotalUnreadMessageCount(n){return e.__awaiter(this,void 0,void 0,(function*(){const s=Object.assign(Object.assign({},t.TotalUnreadMessageCountParamsDefault),n);e.unless(t.validateTotalUnreadMessageCountParams(s)).throw(e.SendbirdError.invalidParameters);const{sdkState:a,requestQueue:i}=e.Vault.of(this._iid),r=new t.GetTotalUnreadMessageCountRequestCommand({userId:a.userId,filter:s,includeFeedChannel:!0}),o=yield i.send(r),{unreadFeedCount:l=0}=o.as(t.GetTotalUnreadMessageCountResponseCommand);return l}))}getGlobalNotificationChannelSetting(){return e.__awaiter(this,void 0,void 0,(function*(){const e=new f,n=yield this._requestQueue.send(e),{jsonString:t}=n.as(v);return{jsonString:t}}))}getNotificationTemplateListByToken(n,t={}){return e.__awaiter(this,void 0,void 0,(function*(){const s=Object.assign(Object.assign({},M),t);e.unless(e.isTypeOf("string",n)&&(n=>e.isTypeOf("boolean",n.reverse,!0)&&e.isArrayOf("string",n.keys,!0)&&e.isTypeOf("number",n.limit,!0))(s)).throw(e.SendbirdError.invalidParameters);const a=new b({token:n,keys:s.keys,reverse:s.reverse,limit:s.limit}),i=yield this._requestQueue.send(a),{hasMore:r,nextToken:o,notificationTemplateList:l}=i.as(y);return{hasMore:r,token:o,notificationTemplateList:l}}))}getNotificationTemplate(n){return e.__awaiter(this,void 0,void 0,(function*(){e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters);const t=new w({key:n}),s=yield this._requestQueue.send(t),{jsonString:a}=s.as(T);return{jsonString:a}}))}upsertChannelsToCache(n){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._feedChannelCache.upsert(n)}))}removeChannelsFromCache(n){return e.__awaiter(this,void 0,void 0,(function*(){yield this._feedChannelCache.remove(n)}))}refreshChannel(n,s=!0,a=e.CollectionEventSource.REFRESH_CHANNEL){return e.__awaiter(this,void 0,void 0,(function*(){try{const e=new u({channelUrl:n,isInternalCall:s}),i=yield this._requestQueue.send(e),{channel:r}=i.as(_);if(r.myMemberState===t.MemberState.NONE)this._dispatcher.dispatch(new t.FeedChannelRemoveEventCommand({channelUrls:[r.url],source:a}));else{const e=yield this.upsertChannelsToCache([r]);this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:e,source:a}))}}catch(s){s.code!==e.SendbirdErrorCode.NON_AUTHORIZED&&s.code!==e.SendbirdErrorCode.NOT_FOUND_IN_DATABASE||this._dispatcher.dispatch(new t.FeedChannelRemoveEventCommand({channelUrls:[n],source:a}))}}))}refreshNotificationCollections(){this._dispatcher.dispatch(new s.NotificationCollectionRefreshCommand)}subscribeChannelEvent(e,n){this._feedChannelBroadcast.subscribe(e,n)}unsubscribeChannelEvent(e){this._feedChannelBroadcast.unsubscribe(e)}_handleEvent(s){return e.__awaiter(this,void 0,void 0,(function*(){switch(s.code){case"ADMM":case"BRDM":{const a="ADMM"===s.code||"BRDM"===s.code?s.as(A):null;if(a&&a.message.channelType===this._channelType){const{message:s,isMentioned:i}=a,r=yield this.getChannel(s.channelUrl,!0);r._runIfHandleableWithGroupChannel((a=>{var o;s instanceof n.NotificationMessage&&i&&(null===(o=s.mentionedUsers)||void 0===o||o.forEach((e=>{for(const n of a.members)if(e.userId===n.userId){e.nickname=n.nickname,e.plainProfileUrl=n.plainProfileUrl,e.metaData=n.metaData;break}}))),this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:[r],source:e.CollectionEventSource.EVENT_MESSAGE_RECEIVED})),this._dispatcher.dispatch(new e.MessageUpdateEventCommand({messages:[s],source:e.CollectionEventSource.EVENT_MESSAGE_RECEIVED})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){for(const e of this._feedChannelHandlers.values())e.onMessageReceived&&e.onMessageReceived(r,s),i&&e.onMentionReceived&&e.onMentionReceived(r,s)}))))}))}break}case"READ":{const n="READ"===s.code?s.as(t.ReadEventCommand):null;if(n){const{readStatus:s}=n,a=this._feedChannelCache.isCachedInMemory(s.channelUrl),i=yield this.getChannel(s.channelUrl,!0);i._runIfHandleableWithGroupChannel((n=>{a&&n._updateUnreadMemberState(s.reader.userId,s.readAt),s.reader.userId===this._sdkState.userId?a?(n.unreadMessageCount>0||n.unreadMentionCount>0)&&(n._updateUnreadCount(0,0),this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:[i],source:e.CollectionEventSource.EVENT_CHANNEL_READ})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){for(const e of this._feedChannelHandlers.values())e.onChannelChanged&&e.onChannelChanged(i)}))))):0!==n.unreadMessageCount&&0!==n.unreadMentionCount||(this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:[i],source:e.CollectionEventSource.EVENT_CHANNEL_READ})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){for(const e of this._feedChannelHandlers.values())e.onChannelChanged&&e.onChannelChanged(i)}))))):(this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:[i],source:e.CollectionEventSource.EVENT_CHANNEL_READ})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){for(const e of this._feedChannelHandlers.values())e.onUnreadMemberStatusUpdated&&e.onUnreadMemberStatusUpdated(i)})))))}))}break}case"SYEV":{const n="SYEV"===s.code?s.as(i.ChannelEventCommand):null;if(n&&n.event.channelType===this._channelType){const{event:s}=n;switch(s.category){case i.ChannelEventCategory.CHANNEL_DELETED:{const n=yield this.getChannel(s.channelUrl,!0);this._dispatcher.dispatch(new t.FeedChannelRemoveEventCommand({channelUrls:[s.channelUrl],source:e.CollectionEventSource.EVENT_CHANNEL_DELETED})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){this._feedChannelHandlers.forEach((e=>{e.onChannelDeleted&&e.onChannelDeleted(n.url,n.channelType)}))}))));break}case i.ChannelEventCategory.CHANNEL_PROP_CHANGED:{const n=yield this.getChannelWithoutCache(s.channelUrl,!0);this._dispatcher.dispatch(new t.FeedChannelUpdateEventCommand({channels:[n],source:e.CollectionEventSource.EVENT_CHANNEL_UPDATED})),e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){this._feedChannelHandlers.forEach((e=>{e.onChannelChanged&&e.onChannelChanged(n)}))}))));break}}}break}}}))}getMessageFromCache(n){var t;return e.__awaiter(this,void 0,void 0,(function*(){return null!==(t=yield this._notificationMessageCache.get(n))&&void 0!==t?t:null}))}getExactlyMatchingMessagesForTokenFromCache(n,t,s){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._notificationMessageCache.fetch({channelUrl:n,token:t,filter:s,exactMatch:!0})}))}getMessagesFromCache(t,s,a,i,r=n.DEFAULT_NOTIFICATION_LIMIT,o=!0){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._notificationMessageCache.fetch({channelUrl:t,token:s,limit:r,filter:i,backward:"next"===a,inclusive:o})}))}}class I extends t.BaseMessageCollection{keyOf(e){return e.notificationId}constructor(n,t){super(n,Object.assign(Object.assign({},t),{channelManager:S.of(n)}));const{connectionManager:a,dispatcher:i}=e.Vault.of(this._iid);this._notificationCollectionEventContext=i.on((n=>{n instanceof s.NotificationCollectionRefreshCommand&&e.sleep(10).then((()=>{a.isConnected||a.isConnecting||this.refresh()}))}))}dispose(){super.dispose(),this._notificationCollectionEventContext.close()}setMessageCollectionHandler(e){this._setBaseMessageCollectionHandler(e)}_addMessagesToView(n,s){const a=this._filterUnderOffsetMessage(n),i=[],r=[];for(const n of a)if(s===e.CollectionEventSource.SYNC_MESSAGE_FILL){if(t.indexOfMessage(this._messages,n)<0){const e=t.placeOfMessage(this._messages,n);this._messages.splice(e,0,n),i.push(n)}}else{const e=t.indexOfMessage(this._messages,n);if(e<0){const e=t.placeOfMessage(this._messages,n);this._messages.splice(e,0,n),i.push(n)}else this._messages[e]=n,r.push(n)}e.shouldGiveEvent(s)&&e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){var e,n,t,a;const o=this._createMessageEventContext(s);i.length>0&&(null===(n=null===(e=this._handler)||void 0===e?void 0:e.onMessagesAdded)||void 0===n||n.call(e,o,this.channel,i)),r.length>0&&(null===(a=null===(t=this._handler)||void 0===t?void 0:t.onMessagesUpdated)||void 0===a||a.call(t,o,this.channel,r))}))))}_updateMessagesToView(n,s){const a=[];for(const e of n){const n=t.indexOfMessage(this._messages,e);n>=0&&(a.push(e),this._messages[n]=e)}return e.shouldGiveEvent(s)&&e.runAsCallback((()=>e.__awaiter(this,void 0,void 0,(function*(){var e,n;const t=this._createMessageEventContext(s);a.length>0&&(null===(n=null===(e=this._handler)||void 0===e?void 0:e.onMessagesUpdated)||void 0===n||n.call(e,t,this.channel,a))})))),a}refresh(){return e.__awaiter(this,void 0,void 0,(function*(){yield this._activate()}))}}class O extends n.BaseChannel{static payloadify(e){var s;return Object.assign(Object.assign({},t.GroupChannel.payloadify(null!==(s=e._groupChannel)&&void 0!==s?s:e)),{is_category_filter_enabled:e.isCategoryFilterEnabled,is_template_label_enabled:e.isTemplateLabelEnabled,categories:e.notificationCategories.map((e=>r.payloadify(e))),last_message:e.lastMessage?n.NotificationMessage.payloadify(e.lastMessage):null})}constructor(s,a){var i,o;super(s,a),this.channelType=e.ChannelType.FEED,this._groupChannel=new t.GroupChannel(s,a),this.isCategoryFilterEnabled=null!==(i=a.is_category_filter_enabled)&&void 0!==i&&i,this.isTemplateLabelEnabled=null===(o=a.is_template_label_enabled)||void 0===o||o,this.notificationCategories=a.categories?a.categories.map((e=>new r(e))):[],this.lastMessage=a.last_message?n.parseMessagePayload(this._iid,Object.assign({channel_type:this.channelType},a.last_message)):null}get groupChannel(){return this._groupChannel}get url(){return this._groupChannel.url}get name(){return this._groupChannel.name}set name(e){this._groupChannel.name=e}get createdAt(){return this._groupChannel.createdAt}get members(){return this._groupChannel.members}get memberCount(){return this._groupChannel.memberCount}get myMemberState(){return this._groupChannel.myMemberState}get myLastRead(){return this._groupChannel.myLastRead}get unreadMessageCount(){return this._groupChannel.unreadMessageCount}serialize(){return Object.assign(Object.assign({},this._groupChannel.serialize()),{notificationCategories:this.notificationCategories,lastMessage:this.lastMessage})}refresh(){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._groupChannel._refresh(!0),this}))}markAsRead(){return e.__awaiter(this,void 0,void 0,(function*(){const{sdkState:n,dispatcher:s,requestQueue:a}=e.Vault.of(this._iid),i=new t.ReadAPIRequestCommand({userId:n.userId,channelUrl:this.url,channelType:e.ChannelType.FEED}),r=yield a.send(i),{readAt:o}=r.as(t.ReadAPIResponseCommand);if(this._groupChannel._updateUnreadMemberState(n.userId,o),this._groupChannel.unreadMessageCount>0||this._groupChannel.unreadMentionCount>0){this._groupChannel._updateUnreadCount(0,0);S.of(this._iid).handlers.map((e=>{e.onChannelChanged&&e.onChannelChanged(this)}))}s.dispatch(new t.FeedChannelUpdateEventCommand({channels:[this],source:e.CollectionEventSource.EVENT_CHANNEL_READ}))}))}createNotificationCollection(e={}){return new I(this._iid,Object.assign({channel:this},e))}}class k{constructor(){this.onChannelChanged=e.noop,this.onChannelDeleted=e.noop,this.onUnreadMemberStatusUpdated=e.noop,this.onMessageReceived=e.noop,this.onMentionReceived=e.noop}}class U extends k{constructor(e={}){super(),Object.keys(e).forEach((n=>{Object.prototype.hasOwnProperty.call(this,n)&&(this[n]=e[n])}))}}class R extends e.BaseListQuery{constructor(e,n){var t;super(e,n),this.includeEmpty=d,this.includeEmpty=null!==(t=n.includeEmpty)&&void 0!==t?t:d}_validate(){return super._validate()&&e.isTypeOf("boolean",this.includeEmpty)}next(){return e.__awaiter(this,void 0,void 0,(function*(){if(this._validate()){if(this._isLoading)throw e.SendbirdError.queryInProgress;if(this._hasNext){this._isLoading=!0;const n=S.of(this._iid),t=e.undefineNullProps(Object.assign({},this)),{channels:s,token:a}=yield n.getMyFeedChannels(this._token,t,this.limit);return this._token=a,this._hasNext=!!a,this._isLoading=!1,s}return[]}throw e.SendbirdError.invalidParameters}))}}class P extends e.Module{constructor(){super(...arguments),this.name="feedChannel"}init(e,n){super.init(e,n),this._manager=new S(e,n)}createMyFeedChannelListQuery(e={}){return new R(this._iid,e)}addFeedChannelHandler(n,t){e.unless(e.isTypeOf("string",n)&&t instanceof U).throw(e.SendbirdError.invalidParameters),this._manager.addHandler(n,t)}removeFeedChannelHandler(n){e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters),this._manager.removeHandler(n)}removeAllFeedChannelHandlers(){this._manager.clearHandler()}getChannel(n){return e.__awaiter(this,void 0,void 0,(function*(){return e.unless(e.isTypeOf("string",n)).throw(e.SendbirdError.invalidParameters),this._manager.getChannel(n)}))}getMyFeedChannelChangeLogsByTimestamp(n,t={}){return e.__awaiter(this,void 0,void 0,(function*(){const s=Object.assign(Object.assign({},C),t);return e.unless(e.isTypeOf("number",n)&&m(s)).throw(e.SendbirdError.invalidParameters),yield this._manager.getMyFeedChannelChangeLogs(n,s)}))}getMyFeedChannelChangeLogsByToken(n,t={}){return e.__awaiter(this,void 0,void 0,(function*(){const s=Object.assign(Object.assign({},C),t);return e.unless(e.isTypeOf("string",n)&&m(s)).throw(e.SendbirdError.invalidParameters),yield this._manager.getMyFeedChannelChangeLogs(n,s)}))}getTotalUnreadMessageCount(n={}){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._manager.getTotalUnreadMessageCount(n)}))}getGlobalNotificationChannelSetting(){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._manager.getGlobalNotificationChannelSetting()}))}getNotificationTemplateListByToken(n,t={}){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._manager.getNotificationTemplateListByToken(n,t)}))}getNotificationTemplate(n){return e.__awaiter(this,void 0,void 0,(function*(){return yield this._manager.getNotificationTemplate(n)}))}refreshNotificationCollections(){this._manager.refreshNotificationCollections()}}exports.NotificationMessage=n.NotificationMessage,exports.FeedChannelEventContext=t.FeedChannelEventContext,exports.NotificationEventContext=t.NotificationEventContext,exports.FeedChannel=O,exports.FeedChannelHandler=U,exports.FeedChannelListQuery=R,exports.FeedChannelModule=P,exports.NotificationCategory=r,exports.NotificationCollection=I;
